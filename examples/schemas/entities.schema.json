{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/entities.schema.json",
  "title": "Entities",
  "description": "Schema for entities (restaurants, hotels, attractions, events) with flexible metadata storage",
  "type": "object",
  "properties": {
    "entities": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": { 
            "type": "string", 
            "pattern": "^[a-z0-9][a-z0-9_-]{2,}$",
            "description": "Unique identifier for the entity (lowercase alphanumeric with underscore/hyphen, min 3 chars)"
          },
          "type": { 
            "type": "string", 
            "enum": ["restaurant", "hotel", "attraction", "event", "other"],
            "description": "Entity type. Use 'other' for custom or undefined types."
          },
          "name": { 
            "type": "string", 
            "minLength": 1,
            "description": "Display name of the entity"
          },
          "status": { 
            "type": "string",
            "enum": ["active", "inactive", "draft"],
            "default": "draft",
            "description": "Current status of the entity. Defaults to 'draft' for new entities."
          },
          "externalId": { 
            "type": "string",
            "description": "External system identifier for synchronization (e.g., server_id from legacy system)"
          },
          "createdAt": { 
            "type": "string", 
            "format": "date-time",
            "description": "Timestamp when entity was created. Auto-generated by system if not provided."
          },
          "updatedAt": { 
            "type": "string", 
            "format": "date-time",
            "description": "Timestamp when entity was last updated. MUST be auto-generated by backend on every modification."
          },
          "createdBy": { 
            "type": "string",
            "description": "User or system that created the entity"
          },
          "updatedBy": { 
            "type": "string",
            "description": "User or system that last updated the entity. MUST be set by backend on every modification."
          },
          "sync": {
            "type": "object",
            "description": "Synchronization metadata for external system integration",
            "additionalProperties": false,
            "properties": {
              "serverId": { 
                "type": "integer",
                "description": "ID in external server system"
              },
              "status": { 
                "type": "string",
                "enum": ["synced", "pending", "error", "conflict"],
                "default": "pending",
                "description": "Current synchronization status. Defaults to 'pending' for new sync operations."
              },
              "lastSyncedAt": { 
                "type": "string", 
                "format": "date-time",
                "description": "Timestamp of last successful sync"
              },
              "externalReference": { 
                "type": "string",
                "description": "Reference identifier in external system"
              },
              "errorMessage": {
                "type": "string",
                "description": "Error message if sync status is 'error'"
              }
            }
          },
          "metadata": {
            "type": "array",
            "minItems": 1,
            "description": "Array of metadata from various sources (collector, system, external APIs)",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "type": { 
                  "type": "string", 
                  "minLength": 1,
                  "description": "Metadata type (e.g., 'collector', 'restaurant', 'michelin', 'google_places')"
                },
                "source": { 
                  "type": "string",
                  "description": "Source system or origin of the metadata"
                },
                "importedAt": { 
                  "type": "string", 
                  "format": "date-time",
                  "description": "Timestamp when metadata was imported"
                },
                "created": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Creation metadata (timestamp, curator, etc.)"
                },
                "modified": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Modification metadata (timestamp, curator, etc.)"
                },
                "data": { 
                  "type": "object",
                  "description": "The actual metadata payload, structure varies by type"
                }
              },
              "required": ["type", "data"]
            }
          }
        },
        "required": ["id", "type", "name", "metadata"]
      }
    }
  },
  "required": ["entities"],
  "additionalProperties": false
}
